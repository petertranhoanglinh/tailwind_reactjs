[
    {
        "menu-parent": "Bonus",
        "menu-name": "SearchBonusDetail",
        "menu-desc": "Retrieves bonus benefit details based on the given criteria.",
        "input": {
            "description": "This API retrieves bonus summaries based on the specified criteria, including company ID, user ID, summary type (monthly or yearly), and optional date range.",
            "url": "api/bonus/BenefitDetailInquiry/search",
            "method": "POST",
            "content-type": "application/json",
            "body": {
                "fields": [
                    {
                        "name": "comId",
                        "type": "text",
                        "required": "required",
                        "length": 8,
                        "remarks": "Company ID",
                        "example": "REIZ"
                    },
                    {
                        "name": "userid",
                        "type": "text",
                        "required": "required",
                        "length": 10,
                        "remarks": "User ID",
                        "example": "0124080002"
                    },
                    {
                        "name": "type",
                        "type": "text",
                        "required": "required",
                        "length": 1,
                        "remarks": "1 (retrieve data from Pay_Calc_1 for monthly summary), 2 (retrieve data from Pay_Calc_2 for yearly summary)",
                        "example": "1"
                    },
                    {
                        "name": "date1",
                        "type": "text",
                        "required": "optional",
                        "length": 10,
                        "remarks": "Start date for search with format YYYYMMDD",
                        "example": "20251230"
                    },
                    {
                        "name": "date2",
                        "type": "text",
                        "required": "optional",
                        "length": 10,
                        "remarks": "End date for search with format YYYYMMDD",
                        "example": "20251230"
                    },
                    {
                        "name": "page",
                        "type": "int",
                        "required": "Optional",
                        "length": 100,
                        "remarks": "number of pages of list(default 0)",
                        "example": 0
                    },
                    {
                        "name": "len",
                        "type": "int",
                        "required": "Optional",
                        "length": 100,
                        "remarks": "number of length of list(default 10)",
                        "example": 10
                    }
                ]
            }
        },
        "output": {
            "description": "This API returns a JSON object containing bonus benefit details, including payment date, user rank, and total amount. The response is structured as a JSON object with success and error handling.",
            "success": {
                "status": "Ok",
                "message": "BenefitDetailInquiryDto []",
                "fields": [
                    {
                        "name": "paydate",
                        "type": "text",
                        "required": "required",
                        "remarks": "Payment date with format YYYYMMDD (Ex: 20251230)"
                    },
                    {
                        "name": "rankName",
                        "type": "text",
                        "required": "required",
                        "remarks": "User rank name"
                    },
                    {
                        "name": "totalAmt",
                        "type": "number",
                        "required": "required",
                        "remarks": "Total amount"
                    }
                ]
            },
            "error": "Null"
        }
    },
    {
        "menu-parent": "Bonus",
        "menu-name": "BonusMonthlySearch",
        "menu-desc": "Displays bonus payment details by month based on the selected criteria for a specific user",
        "input": {
            "description": "This API allows users to search for bonus payment records by specifying a company ID, user ID, and date range. Users can filter results based on monthly or yearly summaries. The response supports pagination for efficient data retrieval.",
            "url": "api/bonus/accountingInquiry/search",
            "method": "POST",
            "content-type": "application/json",
            "body": {
                "fields": [
                    {
                        "name": "comId",
                        "type": "text",
                        "required": "required",
                        "length": 8,
                        "remarks": "Company ID for the query",
                        "example": "REIZ"
                    },
                    {
                        "name": "userid",
                        "type": "text",
                        "required": "required",
                        "length": 8,
                        "remarks": "User ID for whom the data is retrieved",
                        "example": "0124080002"
                    },
                    {
                        "name": "date1",
                        "type": "text",
                        "required": "required",
                        "length": 10,
                        "remarks": "Start date (YYYYMMDD format)",
                        "example": "20250531"
                    },
                    {
                        "name": "date2",
                        "type": "text",
                        "required": "required",
                        "length": 10,
                        "remarks": "End date (YYYYMMDD format)",
                        "example": "20250531"
                    },
                    {
                        "name": "chkDate",
                        "type": "integer",
                        "required": "required",
                        "length": 1,
                        "remarks": "1 (summarize by month), 2 (summarize by year)",
                        "example": "1"
                    },
                    {
                        "name": "page",
                        "type": "int",
                        "required": "Optional",
                        "length": 100,
                        "remarks": "number of pages of list(default 0)",
                        "example": 0
                    },
                    {
                        "name": "len",
                        "type": "int",
                        "required": "Optional",
                        "length": 100,
                        "remarks": "number of length of list(default 10)",
                        "example": 10
                    }
                ]
            }
        },
        "output": {
            "description": "Bonus monthly search results displaying payment dates and total amounts based on the selected criteria.",
            "success": {
                "status": "Ok",
                "message": "BenefitDetailInquiryDto []",
                "fields": [
                    {
                        "name": "paydate",
                        "type": "text",
                        "remarks": "Payment date in YYYYMM format"
                    },
                    {
                        "name": "amt1 - amt15",
                        "type": "number",
                        "remarks": "Amount pay name 1 -> 15 (Visibility controlled by Bonus settings)"
                    },
                    {
                        "name": "totalAmt",
                        "type": "number",
                        "remarks": "Total amount calculated"
                    }
                ]
            },
            "error": "Null"
        }
    },
    {
        "menu-parent": "Bonus",
        "menu-name": "BonusCalendar",
        "menu-desc": "Retrieves benefit calendar details for a specific company and user.",
        "input": {
            "description": "The getBenefitCalendar API retrieves benefit-related data for a user based on the specified company, user ID, and month. This API is used to populate the benefit calendar with relevant information.",
            "url": "api/bonus/getBenefitCalendar",
            "method": "GET",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID for the query",
                    "example": "REIZ"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID for whom the data is retrieved",
                    "example": "0124080002"
                },
                {
                    "name": "yyyymm",
                    "type": "text",
                    "required": "required",
                    "length": 6,
                    "remarks": "Year and month in YYYYMM format",
                    "example": "202505"
                }
            ]
        },
        "output": {
            "description": "This API returns a JSON string containing benefit-related details for a specific user, company, and month. The response includes payment date, total amount, tax deductions.",
            "success": {
                "status": "Ok",
                "message": "BenefitCalendarDto []",
                "fields": [
                    {
                        "name": "payDate",
                        "type": "text",
                        "remarks": "Payment date in YYYYMMDD format"
                    },
                    {
                        "name": "payDay",
                        "type": "text",
                        "remarks": "Day of the month for the payment"
                    },
                    {
                        "name": "totalAmt",
                        "type": "number",
                        "remarks": "Total amount calculated"
                    },
                    {
                        "name": "taxAmt",
                        "type": "number",
                        "remarks": "Total tax amount deducted"
                    },
                    {
                        "name": "trueAmt",
                        "type": "number",
                        "remarks": "Actual amount received after tax deductions"
                    }
                ]
            },
            "error": "Null"
        }
    },
    {
        "menu-parent": "Bonus",
        "menu-name": "BonusAnalysis",
        "menu-desc": "Retrieves bonus analysis details for a specific company, user, and year.",
        "input": {
            "description": "The bonusAnalysicGird API retrieves a detailed analysis of bonuses received by a user within a specified year. The data is aggregated by month and categorized by different bonus types, providing a comprehensive view of total earnings for each period.",
            "url": "api/bonus/bonusAnalysicGird",
            "method": "GET",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID associated with the user.",
                    "example": "REIZ"
                },
                {
                    "name": "lang",
                    "type": "text",
                    "required": "required",
                    "length": 3,
                    "remarks": "Language code (e.g., 'US', 'VN', 'KR' , 'JP').",
                    "example": "US"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID for whom the bonus data is retrieved.",
                    "example": "0124080002"
                },
                {
                    "name": "year",
                    "type": "text",
                    "required": "required",
                    "length": 4,
                    "remarks": "The year for which the bonus analysis is retrieved (format: YYYY).",
                    "example": "2025"
                }
            ]
        },
        "output": {
            "description": "This API returns a JSON string containing benefit-related details for a specific user, company, and month. The response includes payment date, total amount, tax deductions, and the actual amount received after tax.",
            "success": {
                "status": "success",
                "message": "BenefitDetailInquiryDto []",
                "fields": [
                    {
                        "name": "giveDate",
                        "type": "text",
                        "remarks": "The bonus distribution month in YYYYMM format."
                    },
                    {
                        "name": "amt1 - amt15",
                        "type": "number",
                        "remarks": "Amount pay name 1 -> 15 (Visibility controlled by Bonus settings)"
                    },
                    {
                        "name": "totalAmt",
                        "type": "number",
                        "remarks": "Total bonus amount for the corresponding month."
                    }
                ]
            },
            "error": "Null"
        }
    },
    {
        "menu-parent": "Bonus",
        "menu-name": "BonusAnalysis",
        "menu-desc": "Retrieves a summary of bonus amounts for a specific company and user.",
        "input": {
            "description": "The bonusAnalysicGirdSum API retrieves the total bonus amounts categorized by different types for a user in a given year.",
            "url": "api/bonus/bonusAnalysicGirdSum",
            "method": "GET",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID for the query",
                    "example": "REIZ"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID for whom the data is retrieved",
                    "example": "0124080002"
                },
                {
                    "name": "year",
                    "type": "text",
                    "required": "required",
                    "length": 4,
                    "remarks": "Year in YYYY format",
                    "example": "2025"
                }
            ]
        },
        "output": {
            "description": "The bonusAnalysicGirdSum API returns a JSON object containing the total bonus amounts for different categories.",
            "success": {
                "status": "Ok",
                "message": "BenefitDetailInquiryDto[]",
                "fields": [
                    {
                        "name": "amt1 - amt15",
                        "type": "number",
                        "remarks": "Total Amount pay name 1 -> 15 (Visibility controlled by Bonus settings)"
                    },
                    {
                        "name": "totalAmt",
                        "type": "number",
                        "remarks": "Total amount across all categories"
                    }
                ]
            },
            "error": "Null"
        }
    },
    {
        "menu-parent": "Bonus",
        "menu-name": "BonusAnalysis",
        "menu-desc": "Retrieves a summary of bonus payments for a specific company and user in a given year, including payment types, total amounts, highest received payment, and percentage distribution.",
        "input": {
            "description": "The bonusAnalysicChart1 API retrieves the distribution of bonus amounts for a specific user in a given year, categorized by payment types. It provides total amounts, the highest received payment, and percentage distribution of each bonus type.",
            "url": "api/bonus/bonusAnalysicChart1",
            "method": "GET",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID for the query",
                    "example": "REIZ"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID for whom the data is retrieved",
                    "example": "0124080002"
                },
                {
                    "name": "year",
                    "type": "text",
                    "required": "required",
                    "length": 4,
                    "remarks": "Year in YYYY format",
                    "example": "2025"
                }
            ]
        },
        "output": {
            "description": "The bonusAnalysicChart1 API returns a JSON object containing the distribution of bonus amounts for a user in a given year, categorized by payment types. It includes the total amount for each category, the highest received amount, and the percentage share of each category.",
            "success": {
                "status": "Ok",
                "message": "BenefitDetailInquiryDto []",
                "fields": [
                    {
                        "name": "payCD",
                        "type": "text",
                        "remarks": "Payment category code"
                    },
                    {
                        "name": "payName",
                        "type": "text",
                        "remarks": "Payment category name"
                    },
                    {
                        "name": "totalAmt",
                        "type": "number",
                        "remarks": "Total amount for the category"
                    },
                    {
                        "name": "rate",
                        "type": "number",
                        "remarks": "Percentage contribution of this category to total bonuses"
                    }
                ]
            },
            "error": "Null"
        }
    },
    {
        "menu-parent": "Bonus",
        "menu-name": "BonusAnalysis",
        "menu-desc": "Retrieves the highest monthly bonus amount for a specific company and user in a given year, ensuring all months are represented.",
        "input": {
            "description": "The bonusAnalysicChart3 API retrieves the highest bonus amount distributed per month for a user in a given year, ensuring all months are included in the response.",
            "url": "api/bonus/bonusAnalysicChart3",
            "method": "GET",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID for the query",
                    "example": "REIZ"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID for whom the data is retrieved",
                    "example": "0124080002"
                },
                {
                    "name": "year",
                    "type": "text",
                    "required": "required",
                    "length": 4,
                    "remarks": "Year in YYYY format",
                    "example": "2025"
                }
            ]
        },
        "output": {
            "description": "The bonusAnalysicChart3 API returns a JSON object containing the monthly bonus amounts and related data.",
            "success": {
                "status": "Ok",
                "message": "BenefitDetailInquiryDto[]",
                "fields": [
                    {
                        "name": "regdate",
                        "type": "text",
                        "remarks": "Month in YYYYMM format"
                    },
                    {
                        "name": "totalAmt",
                        "type": "number",
                        "remarks": "Total bonus amount for the month"
                    },
                    {
                        "name": "Max_Amt",
                        "type": "number",
                        "remarks": "The highest bonus amount recorded across all months of the queried year"
                    }
                ]
            },
            "error": "Null"
        }
    },
    {
        "menu-parent": "Bonus",
        "menu-name": "TitlePay",
        "menu-desc": "Retrieves the list of available pay titles for a given company.",
        "input": {
            "description": "The TitlePay API fetches the pay names and codes associated with a company.",
            "url": "api/bonus/titlePay",
            "method": "GET",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID for the query",
                    "example": "REIZ"
                }
            ]
        },
        "output": {
            "description": "The TitlePay API returns a JSON object containing a list of pay titles with their corresponding details.",
            "success": {
                "status": "Ok",
                "message": "Query executed successfully",
                "fields": [
                    {
                        "name": "Num",
                        "type": "text",
                        "remarks": "Numeric representation of the pay code"
                    },
                    {
                        "name": "PayName",
                        "type": "text",
                        "remarks": "Name of the pay title"
                    },
                    {
                        "name": "PayCd",
                        "type": "text",
                        "remarks": "Pay code identifier"
                    }
                ]
            },
            "error": "Null"
        }
    },
    {
        "menu-parent": "Member",
        "menu-name": "FindMember",
        "menu-desc": "Retrieves member details based on company ID and user ID.",
        "input": {
            "description": "This API retrieves detailed member information based on company ID and user ID.",
            "url": "api/member/find-id",
            "method": "GET",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID for the query",
                    "example": "REIZ"
                },
                {
                    "name": "lang",
                    "type": "text",
                    "required": "required",
                    "length": 2,
                    "remarks": "Language code (e.g., EN, KR)",
                    "example": "KR"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID for whom the data is retrieved",
                    "example": "0124080002"
                }
            ]
        },
        "output": {
            "description": "The API returns a JSON object containing detailed member information.",
            "success": {
                "status": "Ok",
                "message": "MemberDto {}",
                "fields": [
                    {
                        "name": "userid",
                        "type": "text",
                        "remarks": "User ID"
                    },
                    {
                        "name": "username",
                        "type": "text",
                        "remarks": "User Name"
                    },
                    {
                        "name": "usernameEng",
                        "type": "text",
                        "remarks": "English User Name"
                    },
                    {
                        "name": "regDate",
                        "type": "text",
                        "remarks": "Registration Date"
                    },
                    {
                        "name": "cntCd",
                        "type": "text",
                        "remarks": "Country Code"
                    },
                    {
                        "name": "cntName",
                        "type": "text",
                        "remarks": "Country Name"
                    },
                    {
                        "name": "pId",
                        "type": "text",
                        "remarks": "Parent ID"
                    },
                    {
                        "name": "pName",
                        "type": "text",
                        "remarks": "Parent Name"
                    },
                    {
                        "name": "rId",
                        "type": "text",
                        "remarks": "Recommender ID"
                    },
                    {
                        "name": "rName",
                        "type": "text",
                        "remarks": "Recommender Name"
                    },
                    {
                        "name": "rankCd",
                        "type": "text",
                        "remarks": "Rank Code"
                    },
                    {
                        "name": "rankName",
                        "type": "text",
                        "remarks": "Rank Name"
                    },
                    {
                        "name": "juminNo",
                        "type": "text",
                        "remarks": "Resident Number"
                    },
                    {
                        "name": "birthday",
                        "type": "text",
                        "remarks": "Birthday"
                    },
                    {
                        "name": "tel",
                        "type": "text",
                        "remarks": "Telephone"
                    },
                    {
                        "name": "mobile",
                        "type": "text",
                        "remarks": "Mobile Number"
                    },
                    {
                        "name": "eMail",
                        "type": "text",
                        "remarks": "Email Address"
                    },
                    {
                        "name": "addr1",
                        "type": "text",
                        "remarks": "Address Line 1"
                    },
                    {
                        "name": "addr2",
                        "type": "text",
                        "remarks": "Address Line 2"
                    },
                    {
                        "name": "userKind",
                        "type": "text",
                        "remarks": "User Type"
                    },
                    {
                        "name": "bankName",
                        "type": "text",
                        "remarks": "Bank Name"
                    },
                    {
                        "name": "bankCd",
                        "type": "text",
                        "remarks": "Bank Code"
                    },
                    {
                        "name": "deAccNo",
                        "type": "text",
                        "remarks": "Decrypted Account Number"
                    },
                    {
                        "name": "gender",
                        "type": "text",
                        "remarks": "Gender"
                    },
                    {
                        "name": "country",
                        "type": "text",
                        "remarks": "Country"
                    },
                    {
                        "name": "city",
                        "type": "text",
                        "remarks": "City"
                    },
                    {
                        "name": "county",
                        "type": "text",
                        "remarks": "County"
                    },
                    {
                        "name": "nickname",
                        "type": "text",
                        "remarks": "Nickname"
                    },
                    {
                        "name": "status",
                        "type": "text",
                        "remarks": "Account Status"
                    },
                    {
                        "name": "statusName",
                        "type": "text",
                        "remarks": "Account Status Name"
                    }
                ]
            },
            "error": "Null"
        }
    },
    {
        "menu-parent": "Member",
        "menu-name": "ChangeInformation",
        "menu-desc": "Updates member information including contact details, address, and important dates.",
        "input": {
            "description": "This API updates member details for a specific company.",
            "url": "api/member/update-infor",
            "method": "POST",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID associated with the member",
                    "example": "REIZ"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID of the member",
                    "example": "0124080002"
                },
                {
                    "name": "updDate",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Update date in YYYYMMDD format",
                    "example": "20240324"
                },
                {
                    "name": "updReason",
                    "type": "text",
                    "required": "required",
                    "length": 255,
                    "remarks": "Reason for updating information",
                    "example": "User requested change of address"
                },
                {
                    "name": "tel",
                    "type": "text",
                    "required": "optional",
                    "length": 20,
                    "remarks": "Updated telephone number",
                    "example": "+82-2-1234-5678"
                },
                {
                    "name": "mobile",
                    "type": "text",
                    "required": "optional",
                    "length": 20,
                    "remarks": "Updated mobile number",
                    "example": "+82-10-9876-5432"
                },
                {
                    "name": "email",
                    "type": "text",
                    "required": "optional",
                    "length": 60,
                    "remarks": "Updated email address",
                    "example": "user@example.com"
                },
                {
                    "name": "birthday",
                    "type": "text",
                    "required": "optional",
                    "length": 8,
                    "remarks": "Birthday in YYYYMMDD format",
                    "example": "19900101"
                },
                {
                    "name": "post",
                    "type": "text",
                    "required": "optional",
                    "length": 8,
                    "remarks": "Postal code",
                    "example": "04547"
                },
                {
                    "name": "state",
                    "type": "text",
                    "required": "optional",
                    "length": 30,
                    "remarks": "State of residence",
                    "example": "Seoul"
                },
                {
                    "name": "city",
                    "type": "text",
                    "required": "optional",
                    "length": 30,
                    "remarks": "City of residence",
                    "example": "Gangnam"
                },
                {
                    "name": "country",
                    "type": "text",
                    "required": "optional",
                    "length": 2,
                    "remarks": "Country of residence",
                    "example": "KR"
                },
                {
                    "name": "addr1",
                    "type": "text",
                    "required": "optional",
                    "length": 90,
                    "remarks": "Primary address line",
                    "example": "123 Gangnam-daero"
                },
                {
                    "name": "addr2",
                    "type": "text",
                    "required": "optional",
                    "length": 90,
                    "remarks": "Secondary address line",
                    "example": "Apt 304"
                },
                {
                    "name": "okDateSMS",
                    "type": "text",
                    "required": "optional",
                    "length": 8,
                    "remarks": "Date of SMS consent",
                    "example": "20230101"
                },
                {
                    "name": "okDateEmail",
                    "type": "text",
                    "required": "optional",
                    "length": 8,
                    "remarks": "Date of Email consent",
                    "example": "20230215"
                },
                {
                    "name": "notice",
                    "type": "text",
                    "required": "optional",
                    "length": 300,
                    "remarks": "Additional notes",
                    "example": "User prefers communication via email."
                },
                {
                    "name": "workUser",
                    "type": "text",
                    "required": "optional",
                    "length": 50,
                    "remarks": "User who performed the update",
                    "example": "admin_01"
                },
                {
                    "name": "logIpAddr",
                    "type": "text",
                    "required": "optional",
                    "length": 50,
                    "remarks": "IP address of the user",
                    "example": "192.168.1.100"
                }
            ]
        },
        "output": {
            "description": "The API returns a JSON object indicating the success or failure of the operation.",
            "success": {
                "status": "Ok",
                "message": "SUCCESS",
                "fields ": [
                    {
                        "name": "retCode",
                        "type": "text",
                        "required": "",
                        "length": 50,
                        "remarks": "Result code(If successful the code will be 'OK')",
                        "example": "OK"
                    },
                    {
                        "name": "retStr",
                        "type": "text",
                        "remarks": "Return message of the operation",
                        "length": 200,
                        "example": ""
                    }
                ]
            },
            "error": [
                {
                    "name": "retCode",
                    "type": "text",
                    "required": "",
                    "length": 50,
                    "remarks": "Result code(If fail the code will be 'ERROR')",
                    "example": "ERROR"
                },
                {
                    "name": "retStr",
                    "type": "text",
                    "required": "",
                    "length": 50,
                    "remarks": "Error message",
                    "example": "error message...."
                }
            ]
        }
    },
    {
        "menu-parent": "Member",
        "menu-name": "ChangeBankAccount",
        "menu-desc": "Changes the bank account details of a member.",
        "input": {
            "description": "This API allows members to update their bank account details.",
            "url": "api/member/changeBankAccount",
            "method": "POST",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID associated with the member",
                    "example": "REIZ"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID of the member",
                    "example": "0124080002"
                },
                {
                    "name": "updDate",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Update date in YYYYMMDD format",
                    "example": "20240324"
                },
                {
                    "name": "updReason",
                    "type": "text",
                    "required": "required",
                    "length": 255,
                    "remarks": "Reason for updating the bank details",
                    "example": "Bank account changed due to new payroll requirements"
                },
                {
                    "name": "bankCd",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "Bank Code",
                    "example": "KDB"
                },
                {
                    "name": "accNo",
                    "type": "text",
                    "required": "required",
                    "length": 20,
                    "remarks": "Account Number",
                    "example": "123456789012"
                },
                {
                    "name": "depositor",
                    "type": "text",
                    "required": "required",
                    "length": 50,
                    "remarks": "Name of the account holder",
                    "example": "John Doe"
                },
                {
                    "name": "accDate",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Account registration date in YYYYMMDD format",
                    "example": "20240101"
                },
                {
                    "name": "workUser",
                    "type": "text",
                    "required": "optional",
                    "length": 50,
                    "remarks": "User performing the update",
                    "example": "admin123"
                },
                {
                    "name": "logIpAddr",
                    "type": "text",
                    "required": "optional",
                    "length": 50,
                    "remarks": "IP address of the user",
                    "example": "192.168.1.100"
                }
            ]
        },
        "output": {
            "description": "The API returns a JSON object indicating the success or failure of the operation.",
            "success": {
                "status": "Ok",
                "message": "SUCCESS",
                "fields ": [
                    {
                        "name": "retCode",
                        "type": "text",
                        "required": "",
                        "length": 50,
                        "remarks": "Result code(If successful the code will be 'OK')",
                        "example": "OK"
                    },
                    {
                        "name": "retStr",
                        "type": "text",
                        "remarks": "Return message of the operation",
                        "length": 200,
                        "example": ""
                    }
                ]
            },
            "error": [
                {
                    "name": "retCode",
                    "type": "text",
                    "required": "",
                    "length": 50,
                    "remarks": "Result code(If fail the code will be 'ERROR')",
                    "example": "ERROR"
                },
                {
                    "name": "retStr",
                    "type": "text",
                    "required": "",
                    "length": 50,
                    "remarks": "Error message",
                    "example": "error message...."
                }
            ]
        }
    },
    {
        "menu-parent": "Member",
        "menu-name": "UpdatePassword",
        "menu-desc": "Updates the password of a member in the system.",
        "input": {
            "description": "This API updates the password of a member based on their company ID and user ID.",
            "url": "api/member/update-pass",
            "method": "POST",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID for the update",
                    "example": "REIZ"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID for whom the password is updated",
                    "example": "0124080002"
                },
                {
                    "name": "passwd",
                    "type": "text",
                    "required": "required",
                    "length": 50,
                    "remarks": "New password to be set",
                    "example": "NewSecureP@ssw0rd"
                }
            ]
        },
        "output": {
            "description": "The API returns a JSON object indicating the success or failure of the operation.",
            "success": {
                "status": "Ok",
                "message": "SUCCESS",
                "fields ": [
                    {
                        "name": "retCode",
                        "type": "text",
                        "required": "",
                        "length": 50,
                        "remarks": "Result code(If successful the code will be 'OK')",
                        "example": "OK"
                    },
                    {
                        "name": "retStr",
                        "type": "text",
                        "remarks": "Return message of the operation",
                        "length": 200,
                        "example": ""
                    }
                ]
            },
            "error": [
                {
                    "name": "retCode",
                    "type": "text",
                    "required": "",
                    "length": 50,
                    "remarks": "Result code(If fail the code will be 'ERROR')",
                    "example": "ERROR"
                },
                {
                    "name": "retStr",
                    "type": "text",
                    "required": "",
                    "length": 50,
                    "remarks": "Error message",
                    "example": "error message...."
                }
            ]
        }
    },
    {
        "menu-parent": "Member",
        "menu-name": "UpdatePin",
        "menu-desc": "Updates the PIN of a member based on company ID and user ID.",
        "input": {
            "description": "This API updates the PIN of a member based on company ID and user ID.",
            "url": "api/member/update-pin",
            "method": "POST",
            "content-type": "application/json",
            "parameters": [
                {
                    "name": "comId",
                    "type": "text",
                    "required": "required",
                    "length": 8,
                    "remarks": "Company ID for the query",
                    "example": "REIZ"
                },
                {
                    "name": "userid",
                    "type": "text",
                    "required": "required",
                    "length": 10,
                    "remarks": "User ID for whom the PIN is updated",
                    "example": "0124080002"
                },
                {
                    "name": "nickname",
                    "type": "text",
                    "required": "required",
                    "length": 50,
                    "remarks": "New nickname to be updated",
                    "example": "newNickname"
                }
            ]
        },
        "output": {
            "description": "The API returns a JSON object indicating the success or failure of the operation.",
            "success": {
                "status": "Ok",
                "message": "SUCCESS",
                "fields ": [
                    {
                        "name": "retCode",
                        "type": "text",
                        "required": "",
                        "length": 50,
                        "remarks": "Result code(If successful the code will be 'OK')",
                        "example": "OK"
                    },
                    {
                        "name": "retStr",
                        "type": "text",
                        "remarks": "Return message of the operation",
                        "length": 200,
                        "example": ""
                    }
                ]
            },
            "error": [
                {
                    "name": "retCode",
                    "type": "text",
                    "required": "",
                    "length": 50,
                    "remarks": "Result code(If fail the code will be 'ERROR')",
                    "example": "ERROR"
                },
                {
                    "name": "retStr",
                    "type": "text",
                    "required": "",
                    "length": 50,
                    "remarks": "Error message",
                    "example": "error message...."
                }
            ]
        }
    }
]